---
- name: Install Starship prompt
  become: true
  community.general.macports:
    name: starship
    state: installed

- name: Install antidote
  ansible.builtin.git:
    repo: 'https://github.com/mattmc3/antidote.git'
    dest: '~/.local/antidote'
    depth: 1
    version: '{{ antidote_version }}'

- name: Create directories
  ansible.builtin.file:
    path: '{{ item }}'
    state: directory
    mode: '0700'
  loop:
    - '{{ xdg_config_home }}/env'
    - '{{ xdg_config_home }}/zsh'
    - '{{ xdg_data_home }}/zsh'

- name: 'Copy .zshenv to home directory'
  ansible.builtin.template:
    src: zshenv.j2
    dest: "{{ lookup('env', 'HOME') }}/.zshenv"
    force: true
    mode: '0600'

- name: 'Copy .zshrc to home directory'
  ansible.builtin.copy:
    src: zshrc
    dest: "{{ lookup('env', 'HOME') }}/.zshrc"
    force: true
    mode: '0600'

- name: 'Copy starship.toml file to config directory'
  ansible.builtin.copy:
    src: starship.toml
    dest: "{{ xdg_config_home }}/starship.toml"
    force: true
    mode: '0600'

- name: Set starship env variables
  ansible.builtin.lineinfile:
    path: '{{ xdg_config_home }}/env/starship'
    regexp: '^{{ item.var }}='
    line: "{{ item.var }}={{ item.value }}"
    create: true
    mode: '0600'
  loop:
    - var: STARSHIP_CACHE
      value: "{{ xdg_cache_home }}/starship"
    - var: STARSHIP_TEST_VALUE
      value: "$XDG_CACHE_HOME/starship"

- name: Copy files to zsh config directory
  ansible.builtin.copy:
    src: '{{ item }}'
    dest: '{{ zsh_config_dir }}/{{ item }}'
    force: true
    mode: '0600'
  loop:
    - paths.zsh

# - name: Create zsh_plugins.txt file
#   ansible.builtin.lineinfile:
#     path: '{{ xdg_config_home }}/zsh/zsh_plugins.txt'
#     line: '{{ item }}'
#     create: true
#   loop:
#     - Tarrasch/zsh-autoenv
#     - zsh-users/zsh-history-substring-search
#     - zsh-users/zsh-completions
#     - zsh-users/zsh-syntax-highlighting

- name: Create zsh_plugins.txt file
  ansible.builtin.copy:
    dest: '{{ xdg_config_home }}/zsh/zsh_plugins.txt'
    content: |
      {% for plugin in zsh_plugins %}
      {{ plugin }}
      {% endfor %}
  vars:
    zsh_plugins:
      - Tarrasch/zsh-autoenv
      - zsh-users/zsh-autosuggestions
      - zsh-users/zsh-completions
      - zsh-users/zsh-syntax-highlighting
      - zsh-users/zsh-history-substring-search


- name: Set autoenv environment variables
  ansible.builtin.lineinfile:
    path: '{{ xdg_config_home }}/env/zshautoenv'
    regexp: '^{{ item.var }}='
    line: "{{ item.var }}={{ item.value }}"
    create: true
    mode: '0600'
  loop:
    - var: AUTOENV_FILE_ENTER
      value: ".autoenv.zsh"
    - var: AUTOENV_FILE_LEAVE
      value: ".autoenv.zsh"
    - var: AUTOENV_HANDLE_LEAVE
      value: 1
